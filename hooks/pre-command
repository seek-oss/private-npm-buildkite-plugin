#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

SEEK_OSS_PRIVATE_NPM_REGISTRY=${BUILDKITE_PLUGIN_PRIVATE_NPM_REGISTRY:-'//registry.npmjs.org/'}
SEEK_OSS_PRIVATE_NPM_SCOPE=${BUILDKITE_PLUGIN_PRIVATE_NPM_SCOPE:-''}
SEEK_OSS_PRIVATE_NPM_TOKEN=${BUILDKITE_PLUGIN_PRIVATE_NPM_TOKEN:-''}
SEEK_OSS_PRIVATE_NPM_FILE=${BUILDKITE_PLUGIN_PRIVATE_NPM_FILE:-''}
SEEK_OSS_PRIVATE_NPM_ENV=${BUILDKITE_PLUGIN_PRIVATE_NPM_ENV:-''}
SEEK_OSS_PRIVATE_NPM_OUTPUT_PATH=${BUILDKITE_PLUGIN_PRIVATE_NPM_OUTPUT_PATH:-'./'}

if { [[ -n "${SEEK_OSS_PRIVATE_NPM_FILE}" ]] && [[ -n "${SEEK_OSS_PRIVATE_NPM_ENV}" ]]; } \
  || { [[ -n "${SEEK_OSS_PRIVATE_NPM_FILE}" ]] && [[ -n "${SEEK_OSS_PRIVATE_NPM_TOKEN}" ]]; } \
  || { [[ -n "${SEEK_OSS_PRIVATE_NPM_TOKEN}" ]] && [[ -n "${SEEK_OSS_PRIVATE_NPM_ENV}" ]]; }
then
  echo ':no_entry_sign: :npm: :package: Failed! Only one of file, env or token parameters may be set'
  exit 1
fi

if [[ -n "${SEEK_OSS_PRIVATE_NPM_FILE}" ]]
then

  SEEK_OSS_PRIVATE_NPM_TOKEN=$(cat "${SEEK_OSS_PRIVATE_NPM_FILE}")
elif [[ -n "${SEEK_OSS_PRIVATE_NPM_ENV}" ]]
then
  SEEK_OSS_PRIVATE_NPM_TOKEN="${!SEEK_OSS_PRIVATE_NPM_ENV}"
fi

if [[ -z $SEEK_OSS_PRIVATE_NPM_TOKEN ]]
then
  echo ':no_entry_sign: :npm: :package: Failed! A valid NPM_TOKEN could not be determined'
  exit 1
fi

echo '--- Setting up access for :no_entry_sign: :npm: :package:'

OUTPUT_FILE="${SEEK_OSS_PRIVATE_NPM_OUTPUT_PATH}.npmrc"

mkdir -p "${OUTPUT_FILE%/*}" && cat > $OUTPUT_FILE << EOF
${SEEK_OSS_PRIVATE_NPM_REGISTRY}:_authToken=${SEEK_OSS_PRIVATE_NPM_TOKEN}
save-exact=true
EOF
if [[ -n "${SEEK_OSS_PRIVATE_NPM_SCOPE}" ]]
then
cat >> $OUTPUT_FILE << EOF
${SEEK_OSS_PRIVATE_NPM_SCOPE}:registry=https:${SEEK_OSS_PRIVATE_NPM_REGISTRY}
EOF
fi
